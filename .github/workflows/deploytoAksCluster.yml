on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: azure/docker-login@v1
      with:
        login-server: aksrepo2505.azurecr.io
        username: ${{ secrets.acr_aksrepo2505_username }}
        password: ${{ secrets.acr_aksrepo2505_password }}
      #build java app
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -Dmaven.test.skip=true -B package --file pom.xml
      
    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build "./src" -f  "src/Dockerfile" -t aksrepo2505.azurecr.io/aksnew2505:${{ github.sha }}
        docker push aksrepo2505.azurecr.io/aksnew2505:${{ github.sha }}
    
    - uses: azure/k8s-set-context@v1
      with:
         kubeconfig: ${{ secrets.aks_aksnew2505_kubeConfig }}
      id: login
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep aksnew2505bd87 | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace aksnew2505bd87`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: aksnew2505bd87
        container-registry-url: aksrepo2505.azurecr.io
        container-registry-username: ${{ secrets.acr_aksrepo2505_username }}
        container-registry-password: ${{ secrets.acr_aksrepo2505_password }}
        secret-name: aksnew2505dockerauth
       
    - uses: azure/k8s-deploy@v1
      with:
        namespace: aksnew2505bd87
        manifests: |
          manifests/deployment-1.yml
          manifests/service-1.yml
          manifests/ingress-1.yml
        images: |
          aksrepo2505.azurecr.io/aksnew2505:${{ github.sha }}
        imagepullsecrets: |
          aksnew2505dockerauth
